import pandas as pd
from datasets import Dataset

def convert_testset_to_ragas_format(testset_dataset):
    """
    Convert a RAGAS testset to the format expected by RAGAS evaluation metrics.
    
    Args:
        testset_dataset: Dataset generated by TestsetGenerator
        
    Returns:
        Dataset: Dataset in RAGAS evaluation format
    """
    # Convert to pandas
    df = testset_dataset.to_pandas()
    
    # Create the proper format for RAGAS evaluation
    ragas_data = []
    for _, row in df.iterrows():
        # Convert reference_contexts to a list of strings
        # If it's already a string, split it into chunks or use as is
        contexts = row["reference_contexts"]
        if isinstance(contexts, str):
            # Split by some delimiter or use the whole string
            context_list = [contexts]
        elif isinstance(contexts, list):
            context_list = contexts
        else:
            context_list = [str(contexts)]
        
        ragas_sample = {
            "question": row["user_input"],
            "answer": row["reference"],  # Using reference as the generated answer
            "contexts": context_list,  # List of context strings
            "ground_truth": row["reference"]  # Using reference as ground truth
        }
        ragas_data.append(ragas_sample)
    
    # Create RAGAS dataset
    ragas_dataset = Dataset.from_list(ragas_data)
    return ragas_dataset

# Example usage:
# ragas_dataset = convert_testset_to_ragas_format(dataset)
# 
# Then evaluate:
# from ragas import evaluate
# from ragas.metrics import faithfulness, answer_relevancy, context_precision, context_recall
# 
# results = evaluate(
#     dataset=ragas_dataset,
#     metrics=[faithfulness, answer_relevancy, context_precision, context_recall]
# ) 